swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: [ ]
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: [ ]
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts:
    get:
      tags:
        - Account Module
      summary: User Account API
      description: API for fetching user accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            $ref: '#/definitions/UserAccountsResponse'
        '400':
          description: Invalid Fields
        '403':
          description: User is not logging
        '500':
          description: Internal Server Error
  /accounts/:id/transactions:
    get:
      tags:
        - Account Module
      summary: User Account API
      description: API for fetching user account transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User Transaction retrieved successfully
          schema:
            $ref: '#/definitions/UserAccountResponse'
        '400':
          description: Invalid Fields
        '403':
          description: User is not logging
        '404':
          description: Account does not exist
        '500':
          description: Internal Server Error
  /accounts/:id/transactions/:transactionId:
    get:
      tags:
        - Account Module
      summary: User Account API
      description: API for fetching user account transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '403':
          description: User is not logging
        '404':
          description: Account or transactions does not exist
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Account Module
      summary: User Account API
      description: API for update a user account transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: update user account transaction
          required: true
          schema:
            $ref: '#/definitions/PatchTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: User Transaction retrieved successfully
          schema:
            $ref: '#/definitions/PatchResponse'
        '400':
          description: Invalid Fields
        '403':
          description: User is not logging
        '404':
          description: Account or transactions does not exist
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  PatchTransaction:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
  PatchResponse:
    type: object
    properties:
      status:
        type: integer
      messages:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          category:
            type: string
          notes:
            type: string
  UserAccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        xml:
          wrapped: true
        items:
          $ref: '#/components/schemas/Accounts'
  UserAccountResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          transactions:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/components/schemas/Transaction'
  TransactionResponse:
    type: object
    properties:
      id:
        type: string
      amount:
        type: number
      date:
        type: string
      description:
        type: string
      tag:
        type: string
      category:
        type: string
      notes:
        type: string
  AccountProfile:
    type: object
    properties:
      id:
        type: string
components:
  schemas:
    Accounts:
      type: object
      properties:
        id:
          type: string
        accountTitle:
          type: string
        amount:
          type: number
        ratio:
          type: number
      xml:
        name: accounts
    Transaction:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        date:
          type: string
        description:
          type: string
        tag:
          type: string
        category:
          type: string
        notes:
          type: string
      xml:
        name: transaction
